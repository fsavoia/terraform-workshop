Demo 1

- Instalar o terraform;
- Criar um usuário na console AWS;
- Configurar AWS CLI com access_key e secret_key;
- Criar provider no terraform;
- Criar arquivo ec2;
- Demonstrar criação, comandos básicos, validate, count, destroy, apply, --auto-approve;
- Criar um elastic ip e associar a instância ec2, remover as configs do count;
** Destruir recursos

- Criar vpc apartada para o novo ambiente, subnet, route table, internet gateway;
- Criar security group;
- Criar duas ec2, uma private e uma public;
- Demonstrar o lifecycle com a opção create before destroy;


Demo 2

- Backend;
- Criar a infraestrutura do backend com s3 e dynamodb;
- Configurar o backend remoto diretório a parte, rodar o terraform init, nesse momento irá copiar o tfstate para o s3, apagar o tfstate e local, rodar terraform init novamente;
- Validar backend remoto, rodando apply;
- Trabalhar com as variáveis;
- Criar um arquivo variables.tf e terraform.tfvars;
- Criar um arquivo locals.tf e demonstrar com tags de ec2;
- Criar um arquivo outputs.tf e demonstrar os outputs de ec2 e recursos de rede, demonstrar funções lookup e element;
- Criar um data source nos outputs, demonstrar AZ de uma instância filtrando por tag;
- Alterar configuração das ec2 para usar data source pegando a última ami amazon linux2;
- Criar um novo arquivo security.tf e demonstrar o uso do Dynamic Block;
- Destruir os recursos.

Demo 3

- Criar um módulo baseado na demo2;
- Comentar o output do módulo que utiliza data source ******
- Demonstrar o uso do módulo, como usar outputs;
- Criar workspaces dev e prd;
- Trabalhar com workspaces, criar os arquivos dev.tfvars e prd.tfvars.
